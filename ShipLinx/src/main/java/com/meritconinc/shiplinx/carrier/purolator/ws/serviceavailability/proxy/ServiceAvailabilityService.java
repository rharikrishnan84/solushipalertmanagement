package com.meritconinc.shiplinx.carrier.purolator.ws.serviceavailability.proxy;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.5.0
 * 2011-12-27T20:30:28.619-05:00
 * Generated source version: 2.5.0
 * 
 */
@WebServiceClient(name = "ServiceAvailabilityService", 
                  wsdlLocation = "ServiceAvailabilityService.wsdl",
                  targetNamespace = "http://purolator.com/pws/service/v1") 
public class ServiceAvailabilityService extends javax.xml.ws.Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://purolator.com/pws/service/v1", "ServiceAvailabilityService");
    public final static QName ServiceAvailabilityServiceEndpoint = new QName("http://purolator.com/pws/service/v1", "ServiceAvailabilityServiceEndpoint");
    static {
        URL url = null;
        try {
            url = new URL("ServiceAvailabilityService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ServiceAvailabilityService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "ServiceAvailabilityService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ServiceAvailabilityService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ServiceAvailabilityService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceAvailabilityService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns ServiceAvailabilityServiceContract
     */
    @WebEndpoint(name = "ServiceAvailabilityServiceEndpoint")
    public ServiceAvailabilityServiceContract getServiceAvailabilityServiceEndpoint() {
        return super.getPort(ServiceAvailabilityServiceEndpoint, ServiceAvailabilityServiceContract.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServiceAvailabilityServiceContract
     */
    @WebEndpoint(name = "ServiceAvailabilityServiceEndpoint")
    public ServiceAvailabilityServiceContract getServiceAvailabilityServiceEndpoint(WebServiceFeature... features) {
        return super.getPort(ServiceAvailabilityServiceEndpoint, ServiceAvailabilityServiceContract.class, features);
    }

}
