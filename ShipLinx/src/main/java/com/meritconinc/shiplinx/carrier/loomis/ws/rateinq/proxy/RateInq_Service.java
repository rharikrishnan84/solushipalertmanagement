package com.meritconinc.shiplinx.carrier.loomis.ws.rateinq.proxy;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.0
 * 2012-02-11T21:55:33.705-05:00
 * Generated source version: 2.5.0
 * 
 */
@WebServiceClient(name = "RateInq", 
                  wsdlLocation = "RateInq.wsdl",
                  targetNamespace = "http://tempuri.org/RATEINQ/Service1") 
public class RateInq_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/RATEINQ/Service1", "RateInq");
    public final static QName RateInqSoap = new QName("http://tempuri.org/RATEINQ/Service1", "RateInqSoap");
    public final static QName RateInqHttpGet = new QName("http://tempuri.org/RATEINQ/Service1", "RateInqHttpGet");
    public final static QName RateInqHttpPost = new QName("http://tempuri.org/RATEINQ/Service1", "RateInqHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("RateInq.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RateInq_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "RateInq.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public RateInq_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RateInq_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RateInq_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns RateInqSoap
     */
    @WebEndpoint(name = "RateInqSoap")
    public RateInqSoap getRateInqSoap() {
        return super.getPort(RateInqSoap, RateInqSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RateInqSoap
     */
    @WebEndpoint(name = "RateInqSoap")
    public RateInqSoap getRateInqSoap(WebServiceFeature... features) {
        return super.getPort(RateInqSoap, RateInqSoap.class, features);
    }
    /**
     *
     * @return
     *     returns RateInqHttpGet
     */
    @WebEndpoint(name = "RateInqHttpGet")
    public RateInqHttpGet getRateInqHttpGet() {
        return super.getPort(RateInqHttpGet, RateInqHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RateInqHttpGet
     */
    @WebEndpoint(name = "RateInqHttpGet")
    public RateInqHttpGet getRateInqHttpGet(WebServiceFeature... features) {
        return super.getPort(RateInqHttpGet, RateInqHttpGet.class, features);
    }
    /**
     *
     * @return
     *     returns RateInqHttpPost
     */
    @WebEndpoint(name = "RateInqHttpPost")
    public RateInqHttpPost getRateInqHttpPost() {
        return super.getPort(RateInqHttpPost, RateInqHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RateInqHttpPost
     */
    @WebEndpoint(name = "RateInqHttpPost")
    public RateInqHttpPost getRateInqHttpPost(WebServiceFeature... features) {
        return super.getPort(RateInqHttpPost, RateInqHttpPost.class, features);
    }

}
