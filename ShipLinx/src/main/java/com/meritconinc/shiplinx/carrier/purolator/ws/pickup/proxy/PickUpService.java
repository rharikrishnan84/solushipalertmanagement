package com.meritconinc.shiplinx.carrier.purolator.ws.pickup.proxy;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.2
 * 2012-07-13T18:43:59.920-04:00
 * Generated source version: 2.5.2
 * 
 */
@WebServiceClient(name = "PickUpService", 
                  wsdlLocation = "PickUpService.wsdl",
                  targetNamespace = "http://purolator.com/pws/service/v1") 
public class PickUpService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://purolator.com/pws/service/v1", "PickUpService");
    public final static QName PickUpServiceEndpoint = new QName("http://purolator.com/pws/service/v1", "PickUpServiceEndpoint");
    static {
        URL url = PickUpService.class.getResource("PickUpService.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(PickUpService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "PickUpService.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public PickUpService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PickUpService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PickUpService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns PickUpServiceContract
     */
    @WebEndpoint(name = "PickUpServiceEndpoint")
    public PickUpServiceContract getPickUpServiceEndpoint() {
        return super.getPort(PickUpServiceEndpoint, PickUpServiceContract.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PickUpServiceContract
     */
    @WebEndpoint(name = "PickUpServiceEndpoint")
    public PickUpServiceContract getPickUpServiceEndpoint(WebServiceFeature... features) {
        return super.getPort(PickUpServiceEndpoint, PickUpServiceContract.class, features);
    }

}
