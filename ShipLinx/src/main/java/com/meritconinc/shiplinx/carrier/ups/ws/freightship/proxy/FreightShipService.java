package com.meritconinc.shiplinx.carrier.ups.ws.freightship.proxy;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.5.0
 * 2011-12-10T08:17:40.065-05:00
 * Generated source version: 2.5.0
 * 
 */
@WebServiceClient(name = "FreightShipService", 
                  wsdlLocation = "FreightShip.wsdl",
                  targetNamespace = "http://www.ups.com/WSDL/XOLTWS/FreightShip/v1.0") 
public class FreightShipService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.ups.com/WSDL/XOLTWS/FreightShip/v1.0", "FreightShipService");
    public final static QName FreightShipPort = new QName("http://www.ups.com/WSDL/XOLTWS/FreightShip/v1.0", "FreightShipPort");
    static {
        URL url = null;
        try {
            url = new URL("FreightShip.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(FreightShipService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "FreightShip.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public FreightShipService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FreightShipService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FreightShipService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns FreightShipPortType
     */
    @WebEndpoint(name = "FreightShipPort")
    public FreightShipPortType getFreightShipPort() {
        return super.getPort(FreightShipPort, FreightShipPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FreightShipPortType
     */
    @WebEndpoint(name = "FreightShipPort")
    public FreightShipPortType getFreightShipPort(WebServiceFeature... features) {
        return super.getPort(FreightShipPort, FreightShipPortType.class, features);
    }

}
