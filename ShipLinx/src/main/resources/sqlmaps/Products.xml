<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="products">

	<resultMap id="ProductsMap" class="com.meritconinc.shiplinx.model.Products">
		<result property="productId" column="product_id"/>
		<result property="productName" column="product_name"/>
		<result property="productDescription" column="product_description"/>
		<result property="productHarmonizedCode" column="harmonized_code"/>
		<result property="unitPrice" column="unit_price"/>
		<result property="originCountry" column="origin_country"/>
		<result property="customerId" column="customer_id"/>
		<result property="productCode" column="product_code"/>
		<result property="unitCost" column="unit_cost"/>
		<result property="weight" column="weight"/>
		<result property="weightUnit" column="weight_unit"/>
		<result property="productLineId" column="product_line_id"/>
		<result property="locationCount" column="location_count"/>
		<result property="wipCount" column="wip_count"/>
		<result property="quarantineCount" column="quarantine_count"/>
		<result property="inqueueCount" column="in_queue_count"/>
		<result property="backOrderCount" column="backorder_count"/>
		<result property="totalCount" column="total_count"/>
		<result property="productLine" column="product_line_id" select="selectProductLine"/>
		<result property="primaryLocationId" column="primary_location_id"/>
	</resultMap> 
	
	<resultMap class="com.meritconinc.shiplinx.model.ProductLine" id="ProductLineMap">
		<result property="productLineId" column="product_line_id"/>
		<result property="lineCode" column="line_code"/>
		<result property="lineName" column="line_name"/>
		<result property="lineDescription" column="line_description"/>
		<result property="customerId" column="customer_id"/>
	</resultMap>

	<select id="selectProductLine" parameterClass="long" resultMap="ProductLineMap">
		select * from product_line where product_line_id=#value#
	</select>
	
	<select id="selectProducts" parameterClass="long" resultMap="ProductsMap">
		select * from products where product_id=#value# and customer_id=#value#
	</select>

	<select id="getProductsList" parameterClass="com.meritconinc.shiplinx.model.Products" resultMap="ProductsMap">
		select p.* from products p 
		<dynamic prepend="where">
			p.customer_id=#customerId#
			
		<isNotNull property="productName">
			<isNotEmpty  property="productName">and p.product_name like '%$productName$%'</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="productDescription">
			<isNotEmpty  property="productDescription">and p.product_description like '%$productDescription$%'</isNotEmpty>
		</isNotNull> 
		
		<isNotNull property="productCode">
			<isNotEmpty  property="productCode">and p.product_code like '%$productCode$%'</isNotEmpty>
		</isNotNull>
			
		<isNotNull property="productHarmonizedCode">
			<isNotEmpty  property="productHarmonizedCode">and p.harmonized_code like '%$productHarmonizedCode$%'</isNotEmpty>
		</isNotNull>
		
		</dynamic>
		order by p.product_id
			
	</select>
	
	
	<select id="getProductsListByCustIdAndProdId" parameterClass="com.meritconinc.shiplinx.model.Products" resultMap="ProductsMap">
		select p.* from products p where p.customer_id=#customerId# and p.product_id=#productId#
	</select>
	
	<select id="getProductByProductIdAndCustomerId" resultMap="ProductsMap">
		select * from products where product_id = #productId# and customer_id = #customerId#
	</select>
	
	<select id="getProductsByOrderAndCustomer" resultMap="ProductsMap">
		select * from products p, order_product o where p.product_id = o.product_id and o.order_id=#orderId# and p.customer_id=#customerId#;
	</select>


	<update id="deleteProduct">
		delete from products where customer_id=#customerId# and product_id=#productId#
	</update>

	<update id="updateProduct">
		update products set product_name =#productName#, product_description= #productDescription#, harmonized_code = #productHarmonizedCode#, product_code = #productCode#,
							unit_price = #unitPrice#, location_count=#locationCount#, wip_count=#wipCount#, quarantine_count=#quarantineCount#, origin_country = #originCountry#, product_line_id=#productLineId#, primary_location_id=#primaryLocationId# ,total_count=(#locationCount#+#wipCount#+#quarantineCount#), backorder_count = #backOrderCount#, in_queue_count= #inqueueCount# where product_id = #productId# and customer_id=#customerId#
	</update>
	
	<update id="updateProduct2">
		update products set 
			<isNotNull property="productName">
				product_name =#productName#,
			</isNotNull>
			<isNotNull property="productDescription">
				product_description= #productDescription#,
			</isNotNull>
			<isNotNull property="productHarmonizedCode">
				harmonized_code = #productHarmonizedCode#,
			</isNotNull>
			<isNotNull property="productCode">
				product_code = #productCode#,
			</isNotNull>
			<isNotNull property="unitPrice">
				unit_price = #unitPrice#,
			</isNotNull>
			<isNotNull property="locationCount">
				location_count=#locationCount#,
			</isNotNull>
			<isNotNull property="wipCount">
				wip_count=#wipCount#,
			</isNotNull>
			<isNotNull property="quarantineCount">
				quarantine_count=#quarantineCount#,
			</isNotNull>
			<isNotNull property="originCountry">
				origin_country = #originCountry#,
			</isNotNull>
			<isNotNull property="productLineId">
				product_line_id=#productLineId#,
			</isNotNull>
			<isNotNull property="primaryLocationId">
				primary_location_id=#primaryLocationId#,
			</isNotNull>
				total_count=(#locationCount#+#wipCount#+#quarantineCount#) where product_id = #productId# and customer_id=#customerId#
	</update>

	<insert id = "createProduct">
		insert into products (customer_id, product_code, product_name, product_description, harmonized_code, unit_price, origin_country, product_line_id, primary_location_id) 
			values (#customerId#, #productCode#, #productName#, #productDescription#, #productHarmonizedCode#, IFNULL(#unitPrice#,0), 
			#originCountry#, #productLineId#, #primaryLocationId#)
	</insert>
	
	<select id="getProductLineList" resultMap="ProductLineMap">
	select * from product_line  
		<dynamic prepend="where">
			<isGreaterThan prepend="and" property="customerId" compareValue="0">
				customer_id = #customerId#
			</isGreaterThan>
			<isNotNull prepend="and" property="lineName">
				<isNotEmpty property="lineName">
		  		line_name like '%$lineName$%'
		  		</isNotEmpty>
	    	</isNotNull>
	    </dynamic>
	</select>
	
	<select id="getProductsByProductLineId" resultMap="ProductsMap">
		select * from products 
		<dynamic prepend="where">
			<isGreaterThan prepend="and" property="customerId" compareValue="0">
				customer_id = #customerId#
			</isGreaterThan>
			<isNotNull prepend="and" property="productName">
				<isNotEmpty property="productName">
		  		product_name like '%$productName$%'
		  		</isNotEmpty>
	    	</isNotNull>
	    	<isNotNull prepend="and" property="productLineId">
	    		product_line_id = #productLineId#
	    	</isNotNull>
	    </dynamic>
	</select>
	
	<select id="getProductLineListById" resultMap="ProductLineMap">
		select * from product_line where product_line_id=#productLineId#
	</select>
	

	<select id="selectProductLineName" parameterClass="long" resultMap="ProductLineMap">
  select line_name from product_line where product_line_id = #value#
</select>

<update id="updateProductLine">
		update product_line set line_name =#lineName#, line_code= #lineCode#, line_description = #lineDescription#, 
							customer_id = #customerId# where product_line_id = #productLineId#
	</update>

	<insert id = "createProductLine">
		insert into product_line (line_name, line_code, line_description, customer_id) 
			values (#lineName#, #lineCode#, #lineDescription#, IFNULL(#customerId#,0))
	</insert>

	<update id="deleteProductLine">
		delete from product_line where customer_id=#customerId# and product_line_id=#productLineId#
	</update>





</sqlMap>